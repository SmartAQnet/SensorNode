/**
 * \file display.h
 *
 * \brief Create logs images & QR
 *
 * This file is used to create ICON images and creating QR-code for OLED display of size 64x128.
 * 
 * \date 3.1.2020
 */

#include <U8g2lib.h>
#include <U8x8lib.h>
#include <qrcode.h>

///version 3 code with double sized code and starting at y0 = 2 is good
const int QRcode_Version = 3;   //  set the version (range 1->40)
///version 3 with ECC_LOW gives 53 "bytes".
const int QRcode_ECC = 0;       //  set the Error Correction level (range 0-3) or symbolic (ECC_LOW, ECC_MEDIUM, ECC_QUARTILE and ECC_HIGH)
///define for double sized pixel QR code
#define _QR_doubleSize    

//TECO Icon
/// TECO Icon bits of size 64x128
const uint8_t PROGMEM teco[] = {  
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0xe0,
   0xff, 0x6d, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
   0x07, 0x00, 0x00, 0xc0, 0x7f, 0x00, 0xfc, 0xff, 0x1f, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0xf0, 0xff,
   0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xc0,
   0x07, 0x00, 0xc0, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
   0x07, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x80, 0xff, 0x1f, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xff,
   0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xe0,
   0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0x07, 0xfc, 0xff, 0xff, 0x00, 0xfe, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0x07, 0xfc, 0xff, 0x7f, 0x80, 0xff, 0x03, 0xfc,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xfc, 0xff, 0x7f,
   0xc0, 0xff, 0x07, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0x07, 0xfc, 0xff, 0x3f, 0xe0, 0xff, 0x0f, 0xf8, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0x07, 0xfc, 0xff, 0x3f, 0xe0, 0xff, 0x1f, 0xf8,
   0xff, 0xff, 0x81, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x3f,
   0xf0, 0xff, 0x1f, 0xf8, 0xff, 0xff, 0x81, 0xff, 0x01, 0x00, 0x00, 0x00,
   0x00, 0xfc, 0xff, 0x3f, 0xf0, 0xff, 0x1f, 0xf0, 0xff, 0xff, 0x81, 0xff,
   0x01, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x3f, 0xf0, 0xff, 0x1f, 0xf0,
   0xff, 0xff, 0x81, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x1f,
   0xf0, 0xff, 0x1f, 0xf0, 0xff, 0xff, 0x81, 0xff, 0x01, 0x00, 0x00, 0x00,
   0x00, 0xfc, 0xff, 0x1f, 0xf0, 0xff, 0x1f, 0xf0, 0xff, 0xff, 0x81, 0xff,
   0x01, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x3f, 0xf0, 0xff, 0x1f, 0xf0,
   0xff, 0xff, 0x81, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x3f,
   0xf0, 0xff, 0x1f, 0xf8, 0xff, 0xff, 0x81, 0xff, 0x01, 0xff, 0xff, 0xff,
   0x07, 0xfc, 0xff, 0x3f, 0xf0, 0xff, 0x1f, 0xf8, 0xff, 0xff, 0x81, 0xff,
   0x01, 0xff, 0xff, 0xff, 0x07, 0xfc, 0xff, 0x3f, 0xe0, 0xff, 0x0f, 0xf8,
   0xff, 0xff, 0x81, 0xff, 0x01, 0xff, 0xff, 0xff, 0x07, 0xfc, 0xff, 0x3f,
   0xc0, 0xff, 0x07, 0xfc, 0xff, 0xff, 0x81, 0xff, 0x01, 0xff, 0xff, 0xff,
   0x07, 0xfc, 0xff, 0x7f, 0x80, 0xff, 0x03, 0xfc, 0xff, 0xff, 0x81, 0xff,
   0x01, 0xff, 0xff, 0xff, 0x07, 0xfc, 0xff, 0x7f, 0x00, 0xff, 0x01, 0xfe,
   0xff, 0xff, 0x81, 0xff, 0x01, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xe0,
   0x00, 0x38, 0x00, 0xfe, 0xff, 0xff, 0x81, 0xff, 0x01, 0x00, 0x00, 0xe0,
   0x07, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xff, 0xff, 0xff, 0x81, 0xff,
   0x01, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x80, 0xff,
   0xff, 0xff, 0x81, 0xff, 0x01, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xc0,
   0x07, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x81, 0xff, 0x01, 0x00, 0x00, 0xe0,
   0x07, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0xe0, 0xff, 0xff, 0xff, 0x81, 0xff,
   0x01, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0xf8, 0xff,
   0xff, 0xff, 0x81, 0xff, 0x01, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xc0,
   0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff };



// KIT Icon 
/// KIT Icon bits of size 64x128
const uint8_t PROGMEM kit[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0x1f, 0xc0, 0xff, 0xff, 0x00, 0x80, 0x01, 0xc0,
   0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0x07, 0xc0, 0xff, 0x7f,
   0x00, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff,
   0x07, 0xc0, 0xff, 0x3f, 0x00, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x80,
   0xff, 0xff, 0xff, 0xfb, 0x07, 0xc0, 0xff, 0x1f, 0x00, 0xe0, 0x01, 0xc0,
   0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xf0, 0x07, 0xc0, 0xff, 0x0f,
   0x00, 0xf0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x3f, 0xf0,
   0x0f, 0xc0, 0xff, 0x07, 0x00, 0xf8, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x80,
   0xff, 0xff, 0x1f, 0xe0, 0x0f, 0xc0, 0xff, 0x07, 0x00, 0xfc, 0x01, 0xc0,
   0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x07, 0xe0, 0x0f, 0xc0, 0xff, 0x03,
   0x00, 0xfc, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x03, 0xc0,
   0x0f, 0xc0, 0xff, 0x01, 0x00, 0xfe, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x80,
   0xff, 0xff, 0x00, 0xc0, 0x1f, 0xc0, 0xff, 0x00, 0x00, 0xff, 0x01, 0xc0,
   0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x00, 0x80, 0x1f, 0xc0, 0x7f, 0x00,
   0x80, 0xff, 0x01, 0xc0, 0x01, 0x00, 0x00, 0x80, 0xff, 0xff, 0x01, 0x80,
   0x1f, 0xc0, 0x3f, 0x00, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0xff, 0xff, 0x03, 0x00, 0x1f, 0xc0, 0x1f, 0x00, 0xc0, 0xff, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0xff, 0xff, 0x03, 0x00, 0x3f, 0xc0, 0x0f, 0x00,
   0xe0, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0xff, 0xff, 0x07, 0x00,
   0x3e, 0xc0, 0x07, 0x00, 0xf0, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0xff, 0xff, 0x0f, 0x00, 0x3e, 0xc0, 0x03, 0x00, 0xf8, 0xff, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0xff, 0xf3, 0x1f, 0x00, 0x3e, 0xc0, 0x03, 0x00,
   0xfc, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0xff, 0xe1, 0x3f, 0x00,
   0x7c, 0xc0, 0x01, 0x00, 0xfc, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0xff, 0xc0, 0x7f, 0x00, 0x7c, 0xc0, 0x01, 0x00, 0xfe, 0xff, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0x7f, 0x00, 0x7f, 0x00, 0x78, 0xc0, 0x01, 0x00,
   0xff, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0x7f, 0x00, 0xfe, 0x00,
   0x78, 0xc0, 0x01, 0x80, 0xff, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0x3f, 0x00, 0xfc, 0x01, 0xf0, 0xc0, 0x01, 0xc0, 0xff, 0xff, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0x1f, 0x00, 0xf8, 0x03, 0xf0, 0xc0, 0x01, 0xc0,
   0xff, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0x1f, 0x00, 0xf0, 0x07,
   0xe0, 0xc0, 0x01, 0xc0, 0xff, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0x0f, 0x00, 0xc0, 0x0f, 0xe0, 0xc0, 0x01, 0xc0, 0xff, 0xff, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0x0f, 0x00, 0x80, 0x0f, 0xc0, 0xc1, 0x01, 0x80,
   0xff, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0x0f, 0x00, 0x00, 0x1f,
   0xc0, 0xc1, 0x01, 0x00, 0xff, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0x1f, 0x00, 0x00, 0x3e, 0xc0, 0xc1, 0x01, 0x00, 0xfe, 0xff, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0x7f, 0x00, 0x00, 0x78, 0x80, 0xc1, 0x01, 0x00,
   0xfc, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0xff, 0x01, 0x00, 0x70,
   0x80, 0xc3, 0x03, 0x00, 0xfc, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0xff, 0x0f, 0x00, 0xe0, 0x00, 0xc3, 0x07, 0x00, 0xf8, 0xff, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0xff, 0x3f, 0x00, 0xc0, 0x01, 0xc3, 0x0f, 0x00,
   0xf0, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x80,
   0x03, 0xc2, 0x1f, 0x00, 0xe0, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0xff, 0xff, 0x03, 0x00, 0x06, 0xc6, 0x3f, 0x00, 0xc0, 0xff, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0xf1, 0xff, 0x0f, 0x00, 0x0c, 0xc4, 0x7f, 0x00,
   0x80, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0x00, 0xfe, 0x3f, 0x00,
   0x08, 0xc4, 0xff, 0x00, 0x80, 0xff, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0x00, 0xc0, 0xff, 0x00, 0x10, 0xc0, 0xff, 0x00, 0x00, 0xff, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0x00, 0x00, 0xfc, 0x03, 0x00, 0xc8, 0xff, 0x01,
   0x00, 0xfe, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0x00, 0x00, 0xc0, 0x0f,
   0x00, 0xc8, 0xff, 0x03, 0x00, 0xfc, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0x00, 0x00, 0x00, 0x3c, 0x00, 0xc0, 0xff, 0x07, 0x00, 0xf8, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xc0, 0xff, 0x0f,
   0x00, 0xf8, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x00,
   0x06, 0xd0, 0xff, 0x1f, 0x00, 0xf0, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 0x00, 0xe0, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x7f,
   0x00, 0xc0, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x00,
   0x00, 0xc0, 0xff, 0xff, 0x00, 0x80, 0x01, 0xc0, 0xff, 0x01, 0xc0, 0xff,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0x01, 0x80, 0x01, 0xc0,
   0xff, 0x01, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff };
   
/// Create the QR code variable
QRCode qrcode;                  

/// U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ 16, /* clock=*/ 15, /* data=*/ 4);
extern U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2;


/**************************************************************************/
/*!
    @brief  Highlight the OLED pixels
*/
/**************************************************************************/
void setPixelsHigh()
{
  for (uint8_t y = 0; y < 63; y++) 
  {
    for (uint8_t x = 0; x < 127; x++) 
    {
      u8g2.setDrawColor(1);       //change to 0 to make QR code with black background
      u8g2.drawPixel(x, y);
    }
  }
}

/**************************************************************************/
/*!
    @brief  Display the created QR code at given x,y coordinate
    @param xinit int value for x coordinate
    @param yinit int value for y coordinate
*/
/**************************************************************************/
void displayQRCode(unsigned int xinit, unsigned int yinit)
{
  uint8_t x0 = xinit;
  uint8_t y0 =  yinit;   //

  //display QRcode
  for (uint8_t y = 0; y < qrcode.size; y++) 
  {
    for (uint8_t x = 0; x < qrcode.size; x++) 
    {

      if (qrcode_getModule(&qrcode, x, y) == 0)      //change to == 1 to make QR code with black background
      {
        u8g2.setDrawColor(1);

        #ifdef  _QR_doubleSize
          //uncomment to double the QRcode. Comment to display normal code size
          u8g2.drawPixel(x0 + 2 * x,     y0 + 2 * y);
          u8g2.drawPixel(x0 + 2 * x + 1, y0 + 2 * y);
          u8g2.drawPixel(x0 + 2 * x,     y0 + 2 * y + 1);
          u8g2.drawPixel(x0 + 2 * x + 1, y0 + 2 * y + 1);
        #else
          //uncomment to display code in normal size.  Comment to double the QRcode
          u8g2.drawPixel(x0 + x, y0 + y);
        #endif
      } 
      else 
      {
        u8g2.setDrawColor(0);
        #ifdef  _QR_doubleSize
          //uncomment to double the QRcode. Comment to display normal code size
          u8g2.drawPixel(x0 + 2 * x,     y0 + 2 * y);
          u8g2.drawPixel(x0 + 2 * x + 1, y0 + 2 * y);
          u8g2.drawPixel(x0 + 2 * x,     y0 + 2 * y + 1);
          u8g2.drawPixel(x0 + 2 * x + 1, y0 + 2 * y + 1);
        #else
          //uncomment to display code in normal size.  Comment to double the QRcode
          u8g2.drawPixel(x0 + x, y0 + y);
        #endif
      }
    }
  }
  u8g2.sendBuffer();
  u8g2.setDrawColor(1);//set to black backgroung again  
}

/**************************************************************************/
/*!
    @brief  Generate the QR code
    @param xinit int value for x coordinate
    @param yinit int value for y coordinate
    @param txt String value for generating the QR Code
*/
/**************************************************************************/
void generateQRCode(unsigned int xinit, unsigned int yinit, const char *txt)
{
  // Allocate memory to store the QR code. memory size depends on version number
  uint8_t qrcodeData[qrcode_getBufferSize(QRcode_Version)];
  
  //configure the text string to code. https://github.com/ArkEcosystem/AIPs/blob/master/AIPS/aip-13.md#simpler-syntax
  qrcode_initText(&qrcode, qrcodeData, QRcode_Version, QRcode_ECC, txt);     //bitcoin address
  
  //Highlight all the pixels
  setPixelsHigh();
  
  //display the generated qr code
  displayQRCode(xinit, yinit);
   
}
